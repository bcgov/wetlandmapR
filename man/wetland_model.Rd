% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/modelmap_processing.R
\name{wetland_model}
\alias{wetland_model}
\title{Wetland prediction model}
\usage{
wetland_model(qdatafn, model.type, model.folder, unique.rowname, predList,
  predFactor, response.name, response.type, seed, response.target = NULL,
  aoi.col = NULL, aoi.target = NULL, MODELfn = NULL,
  na.action = "na.roughfix", ...)
}
\arguments{
\item{qdatafn}{training data filename.}

\item{model.type}{model type to use (string). One of "RF", "QRF", or "CF".}

\item{model.folder}{folder where the output folder will be created.}

\item{unique.rowname}{unique identifier column name in the training data.}

\item{predList}{character vector of predictor names that match the column
names in the training data.}

\item{predFactor}{character vector of predictor names that are factors
(categorical), or FALSE if there are no categorical predictors.}

\item{response.name}{response variable (string); column name in the training
data.}

\item{response.type}{response type (string). One of "binary", "categorical",
or "continuous".}

\item{seed}{number (integer) used to initialize randomization.}

\item{response.target}{optional character vector used to subset training
data to include only those rows that have a value in \code{response.name}
column that matches those in \code{response.target}.}

\item{aoi.col}{optional string to specify the column name in the training
data which identifies seperate AOIs. The values in this column must not
contain the character "-". Setting this parameter means a seperate model
object will be output each using a sub-set of training points defined by
the values in this column. All sub-sets will be run unless the
\code{aoi.target} parameter is specified. To run the model using all
training points, use \code{aoi.col = NULL} (default).}

\item{aoi.target}{optional character vector to identify which AOI to run
the model on. If \code{aoi.target = NULL} (default), and \code{aoi.col}
has been specified, the model will be run on each AOI in turn. \code{aoi.
target} will be appended on to the output folder name created for each AOI.}

\item{MODELfn}{optional filename to use for saved model output. If
\code{MODELfn = NULL} (default), a unique name is created automatically
using the date and time the model is run. If \code{aoi.col} is specified,
each unique value in this field is appended to \code{MODELfn} for each
model run.}

\item{na.action}{optional string to specify action to take if there are NA
values in the predictor data. Defaults to \code{na.roughfix}.}

\item{...}{any other parameters to pass to \code{\link[ModelMap]{model.build}}.}
}
\value{
list containing model object from \code{\link[ModelMap]{model.build}}
  for each AOI; list elements are named by the output model folder string
  (including AOI target name if aoi.target is provided).
}
\description{
This function runs \code{\link[ModelMap]{model.build}} to build a wetland
model using training data attributed with predictor values, such as from
\code{\link{grid_values_at_sp}}.
}
\details{
If an AOI has been used to prepare the training data, the model can be run
for each seperate AOI by using the \code{aoi.col} parameter, or specific AOIs
by also using the \code{aoi.target} parameter.

Response targets can also be provided, so the input training data is
restricted to only those target response points.

As well as building the model, this function produces diagnostics by running
\code{\link[ModelMap]{model.diagnostics}}.
}
\examples{
\dontrun{
# RastLUT:
rastLUT <- read.csv("data/rastLUT.csv",
                    header = FALSE,
                    stringsAsFactors = FALSE)

# Character vector of the predictor names, used as input to the model:
predList <- rastLUT[, 2]

# Training data, that has been intersected with an AOI layer:
qdatafn <- "data/training_points_attd.csv"

model.out <- wetland_model(qdatafn = qdatafn,
                           model.type = "RF",
                           model.folder = "./output",
                           unique.rowname = "OBJECTID",
                           predList = predList,
                           predFactor = FALSE,
                           response.name = "T_W_Class",
                           response.type = "categorical",
                           seed = 44,
                           response.target = c("Wb", "Wf", "Ws"),
                           aoi.col = "BASIN")
}
}
